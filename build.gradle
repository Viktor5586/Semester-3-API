plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id "org.sonarqube" version "3.4.0.2513"
}

group = 's3.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'ch.qos.logback:logback-classic:1.2.11'

	//implementation 'org.flywaydb:flyway-mysql:9.1.6' 				//have to add scripts otherwise it breaks
	implementation 'mysql:mysql-connector-java:8.0.30'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

sonarqube {
	properties {
		property "sonar.projectKey", "FindCargo_Ltd"
		property "sonar.qualitygate.wait", true
	}
}
